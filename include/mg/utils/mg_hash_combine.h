//**************************************************************************************************
// This file is part of Mg Engine. Copyright (c) 2020, Magnus Bergsten.
// Mg Engine is made available under the terms of the 3-Clause BSD License.
// See LICENSE.txt in the project's root directory.
//**************************************************************************************************

//--------------------------------------------------------------------------------------------------
// Adapted from Boost/container_hash. Original license:
//--------------------------------------------------------------------------------------------------
// Copyright 2005-2014 Daniel James.
// Distributed under the Boost Software License, Version 1.0.
//
// Boost Software License - Version 1.0 - August 17th, 2003
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE
//--------------------------------------------------------------------------------------------------

/** @file mg_hash_combine.h
 * Combine 32-bit hashes.
 */

#pragma once

#include <cstdint>

#include "mg/utils/mg_macros.h"

namespace Mg {

namespace detail {

template<typename... HashValues>
MG_USES_UNSIGNED_OVERFLOW void hash_combine_impl(uint32_t& seed, uint32_t hash)
{
    seed ^= hash + 0x9e3779b9 + (seed << 6) + (seed >> 2);
}

} // namespace detail

/** Combine any number of 32-bit hashes (N.B. not cryptographic hashing!). */
template<typename... HashValues> uint32_t hash_combine(HashValues... hashes)
{
    uint32_t seed = 0;
    (detail::hash_combine_impl(seed, hashes), ...);
    return seed;
}

/** Combine any number of 32-bit hashes in an iterator range (N.B. not cryptographic hashing!). */
template<typename InputIt> uint32_t hash_combine_range(InputIt begin, InputIt end)
{
    uint32_t seed = 0;
    for (InputIt it = begin; it != end; ++it) detail::hash_combine_impl(seed, *it);
    return seed;
}

} // namespace Mg
